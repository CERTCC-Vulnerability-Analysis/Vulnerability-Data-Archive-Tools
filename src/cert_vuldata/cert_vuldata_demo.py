'''
Created on Apr 6, 2016

@author: adh
'''
from cert_vuldata.vuldb import VulDb
from collections import defaultdict


def print_google_vuls(vdb):
    print
    print '### Google Vuls by Date ###'
    results = []
    for vu in vdb.find_affected_vendor('Google'):
        results.append((vdb[vu]['DatePublic'].date(), vdb[vu]['ID'], vdb[vu]['Title']))

    for date_pub, v_id, v_title in sorted(results):
        print date_pub, v_id, v_title


def count_vuls_by_year(vdb):
    print  # how many vul records were created each year?
    years = defaultdict(int)
    for _vul_id, vul_data in vdb.iteritems():
        key = vul_data['DateCreated'].year
        years[key] += 1

    print 'Year, NumVulReportsCreated'
    for k, v in sorted(years.items()):
        print '{}, {}'.format(k, v)

    return _vul_id, vul_data, k, v


def print_cves_per_vul(vdb):
    print  # How many CVEs do vul notes have?
    counts = defaultdict(int)
    for _vul_id, vul_data in vdb.iteritems():
        if isinstance(vul_data['CVEIDs'], list):
            counts[len(vul_data['CVEIDs'])] += 1
        elif 'CVE' in vul_data['CVEIDs']:
            counts[1] += 1
        else:
            counts[0] += 1

    print 'NumCVEs, VulCount'
    for k, v in sorted(counts.items()):
        print '{}, {}'.format(k, v)

def main():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('datapath', default='./out', help='path to CERT Vulnerability Data Archive')
    args = parser.parse_args()

    vdb = VulDb(path_to_data=args.datapath, quiet=False)
    vdb.load()

    print_google_vuls(vdb)
    count_vuls_by_year(vdb)
    print_cves_per_vul(vdb)

if __name__ == '__main__':
    main()
